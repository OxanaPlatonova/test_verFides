// Typography
//
// Base font styles for headings and links.
@font-face {
  font-family: "Flaticon";
  src: url("../fonts/flaticon/Flaticon.eot");
  src: url("../fonts/flaticon/Flaticon.eot?#iefix") format("embedded-opentype"),
  url("../fonts/flaticon/Flaticon.woff2") format("woff2"),
  url("../fonts/flaticon/Flaticon.woff") format("woff"),
  url("../fonts/flaticon/Flaticon.ttf") format("truetype"),
  url("../fonts/flaticon/Flaticon.svg#Flaticon") format("svg");
  font-weight: normal;
  font-style: normal;
}

h1, .h1,
h2, .h2,
h3, .h3,
h4, .h4,
h5, .h5,
h6, .h6,
.h {
  font-family: map-deep-get($headings, 'fonts', 'headings-font-family');
  font-weight: 300;
  margin: 0 0 1em;
  color: map-deep-get($headings, 'fonts', 'headings-color');
}
h1, .h1 {
  font-size: map-deep-get($headings, 'sizes', 'h1-font-size');
  font-style: italic;
  &:after{
    content: '';
    display: block;
    width: 250px;
    height: 1px;
    background: map-deep-get($headings, 'fonts', 'border-color');
    margin: 32px auto 0;
  }
  @include media('<=phone') {
    font-size: map-deep-get($headings, 'sizes-phone', 'h1-font-size');
    line-height: 28px;
    margin: 0 0 0.7em;
    &:after{
      width: 125px;
      margin: 15px auto 0;
    }
  }
}

h2, .h2 {
  font-size: map-deep-get($headings, 'sizes', 'h2-font-size');
  text-align: center;
}

h3, .h3 {
  font-size: map-deep-get($headings, 'sizes', 'h3-font-size');
  text-align: center;
  margin: 0 auto 32px;
  @include media('<=phone') {
    font-size: map-deep-get($headings, 'sizes-phone', 'h3-font-size');
    line-height: 16px;
    margin-bottom: 12px;
  }
}

h4, .h4 {
  font-size: map-deep-get($headings, 'sizes', 'h4-font-size');
}

h5, .h5 {
  font-size: map-deep-get($headings, 'sizes', 'h5-font-size');
}

h6, .h6 {
  font-size: map-deep-get($headings, 'sizes', 'h6-font-size');
}

p {
  margin: 0 0 1.5em;
  line-height: 20px;
  @include media('<=phone') {
    p {
      line-height: 15px;
      margin: 0 0 1.1em;
    }
  }
}

a {
  color: map-get($base, 'base-link-color');
  text-decoration: none;
  &:hover{
    color: map-get($base, 'base-link-color-hover');
  }
  &:hover,
  &:focus {
    text-decoration: none;
  }
}